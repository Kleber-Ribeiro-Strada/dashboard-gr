version: '1.0'

services:
  rabbitmq:
    image: heidiks/rabbitmq-delayed-message-exchange:latest
    ports:
      - "5672:5672"
      - "15672:15672"
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - xpack.monitoring.enabled-true
      - xpack.watcher.enable-false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - elastic

  kibana:
     image: docker.elastic.co/kibana/kibana:7.9.2
     container_name: kibana
     ports:
       - "5601:5601"
     depends_on:
       - elasticsearch
     environment:
       - ELASTICSEARCH_URL=http://localhost:9200
     networks:
       - elastic

  front-angular:
    image: front-angular
    build: 
      context: ./front-angular
      dockerfile: Dockerfile
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - elastic      

  api:
    build:
      context: ./DashBoardGr
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "5223:80"
    networks:
      - elastic

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: db
    ports:
      - 1433:1433
    environment:
      - SA_PASSWORD=SQLServer2023!
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer      

  mssqltools:
    image: mcr.microsoft.com/mssql-tools
    container_name: mssqltools
    depends_on:
      - db
    volumes:
      - ./scripts/init-db.sql:/tmp/init-db.sql
      - ./scripts/init.sh:/tmp/init.sh
    command: /bin/bash ./tmp/init.sh      

networks:
  elastic:
    driver: bridge
 
volumes:
  elasticsearch-data: